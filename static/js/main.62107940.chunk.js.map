{"version":3,"sources":["Static/img/article/1906111.jpg","Static/img/article/1905091.png","Static/img/article/18344.jpg","common/listData.js","Home/index.js","404.js","App.js","serviceWorker.js","redux/Reducer.js","redux/Store.js","index.js"],"names":["module","exports","list","href","img","require","title","text","console","log","Home","listItem","map","i","k","className","key","target","style","backgroundImage","Unfd","App","fallback","path","exact","component","Boolean","window","location","hostname","match","nameApp","combineReducers","name","state","action","type","data","year","store","createStore","STATE_FROM_SERVER","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"mGAAAA,EAAOC,QAAU,IAA0B,qC,sGCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,qHCA9BC,G,OAAK,CAAC,CACfC,KAAK,4BACLC,IAAIC,EAAQ,KACZC,MAAM,WACNC,KAAK,sDACP,CACEJ,KAAK,8BACLC,IAAIC,EAAQ,KACZC,MAAM,QACNC,KAAK,iGACP,CACEJ,KAAK,4BACLC,IAAIC,EAAQ,KACZC,MAAM,UACNC,KAAK,kCACP,CACEJ,KAAK,4BACLC,IAAIC,EAAQ,KACZC,MAAM,iCACNC,KAAK,iJCfTC,QAAQC,IAAIP,GAuBGQ,MAtBf,WACI,IAAMC,EAAST,EAAKU,KAAI,SAACC,EAAEC,GAEvB,OADFN,QAAQC,IAAII,GAEN,yBAAKE,UAAU,YAAYC,IAAKF,GAC9B,6BACE,uBAAGC,UAAU,UAAUZ,KAAMU,EAAEV,KAAMc,OAAO,SAASC,MAAO,CAACC,gBAAgB,OAAON,EAAET,IAAI,OAC1F,yBAAKW,UAAU,eACb,4BAAI,uBAAGZ,KAAMU,EAAEV,KAAMc,OAAO,UAAUJ,EAAEP,QACxC,2BAAIO,EAAEN,YAMpB,OACI,yBAAKQ,UAAU,kBACVJ,ICZES,MARf,WACI,OACI,yBAAKL,UAAU,YACX,uBAAGA,UAAU,UAAb,SC2BGM,MAzBf,WACI,OACI,kBAAC,WAAD,KACI,4BAAQN,UAAU,iBAChB,yBAAKA,UAAU,QACb,0BAAMA,UAAU,mBAChB,0BAAMA,UAAU,mBAChB,0BAAMA,UAAU,oBAElB,wBAAIA,UAAU,SAAQ,uBAAGZ,KAAK,gBAAR,gDAExB,yBAAKY,UAAU,cACX,kBAAC,IAAD,KACE,kBAAC,WAAD,CAAUO,SAAU,2CACpB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWf,IACjC,kBAAC,IAAD,CAAOa,KAAK,IAAIE,UAAWL,UCX3BM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,YCMSC,EALDC,YAAgB,CAC1BC,KAjBO,WAAsB,IAArBC,EAAoB,uDAAd,eAAKC,EAAS,uCAC5B,OAAOA,EAAOC,MACV,IAAK,UACL,OAAOD,EAAOE,KACd,QACA,OAAOH,IAaXI,KAVO,WAAmB,IAAlBJ,EAAiB,uDAAX,EAAEC,EAAS,uCACzB,OAAOA,EAAOC,MACV,IAAK,UACL,OAAOD,EAAOE,KACd,QACA,OAAOH,MCXAK,EAFHC,YAAYT,EAASJ,OAAOc,mB,SCQxCC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUL,MAAOA,GACjB,kBAAC,EAAD,QAGFM,SAASC,eAAe,SHkHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL9C,QAAQ8C,MAAMA,EAAMC,c","file":"static/js/main.62107940.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/1906111.3c2a79f2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/1905091.7e7df392.png\";","module.exports = __webpack_public_path__ + \"static/media/18344.71fc8c9d.jpg\";","export const list=[{\r\n    href:'./Demo/ThreeJS/index.html',\r\n    img:require('../Static/img/article/1905091.png'),\r\n    title:'three.js',\r\n    text:'three.js制作的演示例子'\r\n},{\r\n    href:'./Demo/ReactNote/index.html',\r\n    img:require('../Static/img/article/18344.jpg'),\r\n    title:'Hooks',\r\n    text:'React 16.8版本采用Hooks新特性创建的备忘录'\r\n},{\r\n    href:'./Demo/Lacking/index.html',\r\n    img:require('../Static/img/article/1906111.jpg'),\r\n    title:'Lacking',\r\n    text:'React 组件例子'\r\n},{\r\n    href:'./Demo/Echarts/index.html',\r\n    img:require('../Static/img/article/1906111.jpg'),\r\n    title:'Echart图例展示',\r\n    text:'Echarts的分辨率兼容（去除了敏感性东西，可能显的空）'\r\n},]","import  React,{Suspense,lazy,useState} from 'react';\r\nimport {HashRouter as Router,Switch,Route} from 'react-router-dom'\r\nimport {list} from '../common/listData'\r\n\r\nconsole.log(list)\r\nfunction Home(){\r\n    const listItem=list.map((i,k)=>{\r\n      console.log(i)\r\n        return(\r\n            <div className=\"box clear\" key={k}>\r\n              <div>\r\n                <a className=\"box_img\" href={i.href} target=\"_blank\" style={{backgroundImage:\"url(\"+i.img+\")\"}}></a>\r\n                <div className=\"box_content\">\r\n                  <h3><a href={i.href} target=\"_blank\">{i.title}</a></h3>\r\n                  <p>{i.text}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n        )\r\n    })\r\n    return(\r\n        <div className=\"bodyBoxs clear\">\r\n            {listItem}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import  React from 'react';\r\n\r\nfunction Unfd(){\r\n    return(\r\n        <div className=\"bodyBoxs\">\r\n            <p className=\"center\">404</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Unfd","import  React,{Suspense,lazy,useState,Fragment} from 'react';\r\nimport {HashRouter as Router,Switch,Route} from 'react-router-dom'\r\n\r\nimport './App.css';\r\nimport Home from './Home'\r\nimport Unfd from './404'\r\n\r\nfunction App(){\r\n    return(\r\n        <Fragment>\r\n            <header className=\"border_bottom\">\r\n              <div className=\"menu\">\r\n                <span className=\"menu_i preload\" ></span>\r\n                <span className=\"menu_i preload\" ></span>\r\n                <span className=\"menu_i preload\" ></span>\r\n              </div>\r\n              <h2 className=\"title\"><a href=\"./index.html\">饿包子的实验箱</a></h2>\r\n            </header>\r\n            <div className=\"home_body \">\r\n                <Router>\r\n                  <Suspense fallback={<div> loading </div>}>\r\n                  <Switch>\r\n                    <Route path=\"/\" exact component={Home}></Route>\r\n                    <Route path=\"*\" component={Unfd}></Route>\r\n                  </Switch>\r\n                  </Suspense>\r\n                </Router>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {combineReducers} from 'redux'\r\n\r\n\r\nconst name=(state='张三',action)=>{\r\n    switch(action.type){\r\n        case 'setName':\r\n        return action.data\r\n        default:\r\n        return state\r\n    }\r\n}\r\nconst year=(state=1,action)=>{\r\n    switch(action.type){\r\n        case 'setYear':\r\n        return action.data\r\n        default:\r\n        return state\r\n    }\r\n}\r\nconst nameApp=combineReducers({\r\n    name,\r\n    year\r\n})\r\n\r\nexport default nameApp","import {createStore} from 'redux';\r\nimport nameApp from './Reducer';\r\n\r\nlet store = createStore(nameApp, window.STATE_FROM_SERVER)\r\n\r\nexport default store","import 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/stable';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './redux/Store'\nimport {Provider} from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}